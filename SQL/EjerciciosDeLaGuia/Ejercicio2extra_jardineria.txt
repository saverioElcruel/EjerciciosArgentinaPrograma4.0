A continuación, se deben realizar las siguientes consultas 
sobre la base de datos:

Error Code: 1064. You have an error in your SQL syntax; 
check the manual that corresponds to your MySQL server 
version for the right syntax to use near 'PAR' at line 1


Consultas sobre una tabla
1. Devuelve un listado con el código de oficina y 
la ciudad donde hay oficinas.

SELECT codigo_oficina, ciudad
FROM oficina
GROUP BY ciudad;

2. Devuelve un listado con la ciudad y el teléfono de las oficinas de España.

SELECT ciudad,telefono
FROM oficina
WHERE pais = "España"
;

3. Devuelve un listado con el nombre, apellidos y email de los empleados cuyo jefe tiene un
código de jefe igual a 7.
SELECT nombre,apellido1,apellido2,email
FROM empleado
WHERE codigo_jefe = 7
;

4. Devuelve el nombre del puesto, nombre, apellidos y email del jefe de la empresa.
SELECT puesto,nombre,apellido1,apellido2,email
FROM empleado
WHERE puesto LIKE "Director G%"
;

5. Devuelve un listado con el nombre, apellidos y puesto de aquellos empleados que no sean
representantes de ventas.
SELECT nombre,apellido1,apellido2,puesto
FROM empleado
WHERE puesto NOT LIKE "Representante V%"
;

6. Devuelve un listado con el nombre de los todos los clientes españoles.
SELECT nombre_cliente,ciudad,pais
FROM cliente
WHERE pais = "Spain"
;

7. Devuelve un listado con los distintos estados por los que puede pasar un pedido.
SELECT DISTINCT estado
FROM pedido
;

8. Devuelve un listado con el código de cliente de aquellos clientes que realizaron algún pago
en 2008. Tenga en cuenta que deberá eliminar aquellos códigos de cliente que aparezcan
repetidos. Resuelva la consulta:
o Utilizando la función YEAR de MySQL.
o Utilizando la función DATE_FORMAT de MySQL.
o Sin utilizar ninguna de las funciones anteriores.

SELECT DISTINCT cliente.codigo_cliente
FROM cliente
INNER JOIN pago
ON cliente.codigo_cliente = pago.codigo_cliente 
WHERE (SELECT DATE_FORMAT(pago.fecha_pago, "%Y")) = 2008
;

9. Devuelve un listado con el código de pedido, código de cliente, fecha esperada y fecha de
entrega de los pedidos que no han sido entregados a tiempo.
SELECT pedido.codigo_pedido, cliente.codigo_cliente, 
pedido.fecha_esperada, pedido.fecha_entrega
FROM pedido
INNER JOIN cliente
ON pedido.codigo_cliente = cliente.codigo_cliente 
WHERE pedido.fecha_esperada < pedido.fecha_entrega
;

10. Devuelve un listado con el código de pedido, código de cliente, fecha esperada y fecha de
entrega de los pedidos cuya fecha de entrega ha sido al menos dos días antes de la fecha
esperada.
o Utilizando la función ADDDATE de MySQL.
o Utilizando la función DATEDIFF de MySQL.
SELECT pedido.codigo_pedido, cliente.codigo_cliente, pedido.fecha_esperada, pedido.fecha_entrega
FROM pedido
INNER JOIN cliente
ON pedido.codigo_cliente = cliente.codigo_cliente 
WHERE pedido.fecha_esperada - pedido.fecha_entrega > 2
;
SELECT pedido.codigo_pedido, cliente.codigo_cliente, pedido.fecha_esperada, pedido.fecha_entrega
FROM pedido
INNER JOIN cliente
ON pedido.codigo_cliente = cliente.codigo_cliente 
WHERE datediff(pedido.fecha_esperada , pedido.fecha_entrega )> 2
;


11. Devuelve un listado de todos los pedidos que fueron rechazados en 2009.
SELECT pedido.codigo_pedido,pedido.fecha_pedido
FROM pedido
WHERE estado = "rechazado" AND date_format(pedido.fecha_pedido,"%Y")=2009
;

12. Devuelve un listado de todos los pedidos que han sido entregados en el mes de enero de
cualquier año.
SELECT pedido.codigo_pedido,pedido.fecha_pedido,pedido.estado
FROM pedido
WHERE estado = "entregado" AND date_format(pedido.fecha_pedido,"%M")="January"
;
13. Devuelve un listado con todos los pagos que se realizaron en el año 2008 mediante Paypal.
Ordene el resultado de mayor a menor.
SELECT id_transaccion,forma_pago
FROM pago
WHERE date_format(fecha_pago, "%Y")="2008"
order by fecha_pago
desc
;
14. Devuelve un listado con todas las formas de pago que aparecen en la tabla pago. Tenga en
cuenta que no deben aparecer formas de pago repetidas.
SELECT DISTINCT forma_pago
FROM pago
;
15. Devuelve un listado con todos los productos que pertenecen a la gama Ornamentales y que
tienen más de 100 unidades en stock. El listado deberá estar ordenado por su precio de
venta, mostrando en primer lugar los de mayor precio.
SELECT nombre,precio_venta
FROM producto
WHERE gama = "Ornamentales" AND cantidad_en_stock > 100
ORDER BY precio_venta
DESC
;
16. Devuelve un listado con todos los clientes que sean de la ciudad de Madrid y cuyo
representante de ventas tenga el código de empleado 11 o 30.
SELECT cliente.nombre_cliente,cliente.codigo_empleado_rep_ventas
FROM cliente
INNER JOIN empleado
ON cliente.codigo_empleado_rep_ventas = empleado.codigo_empleado
WHERE cliente.ciudad = "Madrid" AND cliente.codigo_empleado_rep_ventas IN (11,30)
;