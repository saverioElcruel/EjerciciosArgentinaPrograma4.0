-- 1. Obtener los datos completos de los empleados.
SELECT * FROM empleados;

-- 2. Obtener los datos completos de los departamentos.
SELECT * FROM departamentos;

-- 3. Listar el nombre de los departamentos.
SELECT * FROM departamentos ORDER BY nombre_depto ASC;

-- 4. Obtener el nombre y salario de todos los empleados.
SELECT nombre,salario FROM empleados;

-- 5. Listar todas las comisiones.
SELECT comision_emp FROM empleados ORDER BY comision_emp DESC;

-- 6. Obtener los datos de los empleados cuyo cargo sea ‘Secretaria’.
SELECT * FROM empleados WHERE cargo_emp = "Secretaria";

-- 7. Obtener los datos de los empleados vendedores, ordenados por nombre
alfabéticamente.
SELECT * FROM empleados WHERE cargo_emp = "Vendedor" ORDER BY nombre ASC;

-- 8. Obtener el nombre y cargo de todos los empleados, ordenados por salario de menor a
mayor.
SELECT nombre,cargo_emp,sal_emp FROM empleados ORDER BY sal_emp ASC;

-- 9. Obtener el nombre de o de los jefes que tengan su departamento situado en la ciudad
de “Ciudad Real
SELECT nombre_jefe_depto,ciudad FROM departamentos WHERE ciudad LIKE "%Real";

-- 10. Elabore un listado donde para cada fila, figure el alias ‘Nombre’ y ‘Cargo’ para las
respectivas tablas de empleados.
SELECT nombre,cargo_emp AS "cargo" FROM empleados;

-- 11. Listar los salarios y comisiones de los empleados del departamento 2000, ordenado
por comisión de menor a mayor.
SELECT sal_emp,comision_emp FROM empleados WHERE id_depto=2000 ORDER BY comision_emp ASC;

-- 12. Obtener el valor total a pagar a cada empleado del departamento 3000, que resulta
de: sumar el salario y la comisión, más una bonificación de 500. Mostrar el nombre del
empleado y el total a pagar, en orden alfabético.
SELECT nombre, sum(sal_emp+comision_emp+500) as total from empleados where id_depto=3000 group by nombre order by nombre asc;

-- 13. Muestra los empleados cuyo nombre empiece con la letra J.
SELECT nombre from empleados where nombre like "j%";

-- 14. Listar el salario, la comisión, el salario total (salario + comisión) y nombre, de aquellos
empleados que tienen comisión superior a 1000.
SELECT sal_emp,comision_emp,sum(sal_emp+comision_emp) as salario_total,nombre from empleados where comision_emp > 1000 group by nombre;

-- 15. Obtener un listado similar al anterior, pero de aquellos empleados que NO tienen
comisión.
SELECT sal_emp,comision_emp,sum(sal_emp+comision_emp) as salario_total,nombre from empleados where comision_emp < 1 group by nombre;

-- 16. Obtener la lista de los empleados que ganan una comisión superior a su sueldo.
SELECT nombre,sal_emp,comision_emp from empleados where comision_emp > sal_emp;

-- 17. Listar los empleados cuya comisión es menor o igual que el 30% de su sueldo.
SELECT nombre from empleados where comision_emp >= sal_emp*0.3;

-- 18. Hallar los empleados cuyo nombre no contiene la cadena “MA”
SELECT nombre from empleados where nombre NOT LIKE "%ma%";

-- 19. Obtener los nombres de los departamentos que sean “Ventas”, “Investigación” o
‘Mantenimiento.
SELECT nombre_depto from departamentos where nombre_depto IN ("Ventas", "Investigación","Mantenimiento");

-- 20. Ahora obtener el contrario, los nombres de los departamentos que no sean “Ventas” ni
“Investigación” ni ‘Mantenimiento.
SELECT nombre_depto from departamentos where nombre_depto NOT IN ("Ventas", "Investigación","Mantenimiento");

-- 21. Mostrar el salario más alto de la empresa.
SELECT max(sal_emp) as salario_maximo from empleados;

-- 22. Mostrar el nombre del último empleado de la lista por orden alfabético.
SELECT nombre from empleados order by nombre DESC LIMIT 1;

-- 23. Hallar el salario más alto, el más bajo y la diferencia entre ellos.
SELECT max(sal_emp) as mayor, min(sal_emp) as menor, max(sal_emp)-min(sal_emp) as diferencia from empleados;

-- 24. Hallar el salario promedio por departamento.
SELECT id_depto,round(avg(sal_emp)) from empleados group by id_depto;

Consultas con Having
-- 25. Hallar los departamentos que tienen más de tres empleados. Mostrar el número de
empleados de esos departamentos.
SELECT count(id_emp),id_depto from empleados group by id_depto HAVING count(id_emp)>2;

-- 26. Hallar los departamentos que no tienen empleados
SELECT count(id_emp),id_depto from empleados group by id_depto HAVING count(id_emp)<1;

Consulta Multitabla (Uso de la sentencia JOIN/LEFT JOIN/RIGHT JOIN)
-- 27. Mostrar la lista de empleados, con su respectivo departamento y el jefe de cada
departamento.
SELECT nombre,nombre_depto,nombre_jefe_depto FROM empleados INNER JOIN departamentos ON empleados.id_depto= departamentos.id_depto;

Consulta con Subconsulta
-- 28. Mostrar la lista de los empleados cuyo salario es mayor o igual que el promedio de la
empresa. Ordenarlo por departamento.
SELECT nombre,sal_emp from empleados where sal_emp>(select avg(sal_emp) from empleados);
